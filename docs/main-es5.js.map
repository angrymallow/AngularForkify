{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/interceptor/auth-interceptor.service.ts","webpack:///src/app/loader/loader.component.ts","webpack:///src/app/loader/loader.component.html","webpack:///src/app/recipe/likes.services.ts","webpack:///src/app/recipe/likes/like-list/like-list.component.ts","webpack:///src/app/recipe/likes/like-list/like-list.component.html","webpack:///src/app/recipe/recipe-details/recipe-details/recipe-details.component.ts","webpack:///src/app/recipe/recipe-details/recipe-details/recipe-details.component.html","webpack:///src/app/recipe/recipe-list/recipe-list.component.ts","webpack:///src/app/recipe/recipe-list/recipe-list.component.html","webpack:///src/app/recipe/recipesearch.services.ts","webpack:///src/app/recipe/search/limit-title.pipe.ts","webpack:///src/app/recipe/search/search-form/search-form.component.ts","webpack:///src/app/recipe/search/search-form/search-form.component.html","webpack:///src/app/recipe/search/search-result/search-result.component.ts","webpack:///src/app/recipe/search/search-result/search-result.component.html","webpack:///src/app/shopping-list/shopping-list.services.ts","webpack:///src/app/shopping-list/shopping-list/shopping-list.component.ts","webpack:///src/app/shopping-list/shopping-list/shopping-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","recipeServices","likeServices","shoppingListServices","searchResult","isSearching","isRecipeLoading","noRecipe","OnLikeUpdated","subscribe","likes","getLikes","onShoppingItemUpdated","shoppingList","getList","searchKey","searchRecipe","result","recipes","error","status","console","log","window","location","hash","replace","selectedRecipeId","getRecipeDetails","recipeId","getRecipe","recipe","recipeDetails","recipe_id","image_url","ingredients","parseIngredient","preparetion_time","title","serving","publisher","publisher_url","isLike","isLiked","calcTime","message","newIngredients","map","el","unitsLong","unitsShort","ingredient","toLowerCase","forEach","unit","i","arrIng","split","unitIndex","findIndex","ing","includes","objIng","arrUnitNum","slice","unitNum","parseInt","eval","join","count","numIng","length","periods","Math","ceil","onSearch","selector","templateUrl","styleUrls","providers","AppModule","provide","useClass","multi","declarations","bootstrap","AuthInterceptor","next","handle","LoaderComponent","LikeServices","getFromStorage","like","push","setToStorage","emit","index","splice","storage","localStorage","getItem","JSON","parse","setItem","stringify","LikeListComponent","RecipeDetailsComponent","newServing","updateServings","deleteLike","addLike","newIng","addShoppingItem","RecipeListComponent","RecipeServices","http","newRecipe","recipeKey","apiendpoint","get","params","set","LimitTitlePipe","limit","newTitle","reduce","acc","cur","name","SearchFormComponent","search","SearchResultComponent","currentPage","isLoading","resultperPage","direction","maxPage","renderResultPerPage","start","end","gotoPage","ShoppingListServices","list","Ingredient","itemInd","newCount","find","providedIn","ShoppingListComponent","removeShoppingItem","updateShoppingItemCount","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSI;;AACI;;AAAsB;;AAAqC;;AAC/D;;;;;;AACA;;;;AAEI;;;;;;AAEJ;;;;;;AAEI,iGAAwB,kBAAxB,EAAwB,uBAAxB;;;;;;AAKJ;;;;AAEI;;;;;;AAEJ;;;;;;AAA6C;;;;QDbpCM,Y;;;AAWX,4BAAoBC,cAApB,EAA4DC,YAA5D,EAAgGC,oBAAhG,EAA4I;AAAA;;AAAA;;AAAxH,aAAAF,cAAA,GAAAA,cAAA;AAAwC,aAAAC,YAAA,GAAAA,YAAA;AAAoC,aAAAC,oBAAA,GAAAA,oBAAA;AATzF,aAAAC,YAAA,GAA+B,EAA/B;AACA,aAAAC,WAAA,GAAuB,KAAvB;AACA,aAAAC,eAAA,GAA2B,KAA3B;AAGA,aAAAC,QAAA,GAAoB,KAApB;AAKL,aAAKL,YAAL,CAAkBM,aAAlB,CAAgCC,SAAhC,CAA0C,YAAM;AAC9C,eAAI,CAACC,KAAL,GAAa,KAAI,CAACR,YAAL,CAAkBS,QAAlB,EAAb;AACD,SAFD;AAIA,aAAKR,oBAAL,CAA0BS,qBAA1B,CAAgDH,SAAhD,CAA0D,YAAM;AAC9D,eAAI,CAACI,YAAL,GAAoB,KAAI,CAACV,oBAAL,CAA0BW,OAA1B,EAApB;AACD,SAFD;AAID;;;;mCAEU;AACT,eAAKJ,KAAL,GAAa,KAAKR,YAAL,CAAkBS,QAAlB,EAAb;AACA,eAAKE,YAAL,GAAoB,KAAKV,oBAAL,CAA0BW,OAA1B,EAApB;AACD;;;iCAEeC,S,EAAiB;AAAA;;AAE/B,eAAKV,WAAL,GAAmB,IAAnB;AACA,eAAKJ,cAAL,CAAoBe,YAApB,CAAiCD,SAAjC,EACGN,SADH,CACa,UAAAQ,MAAM,EAAI;AACnB,kBAAI,CAACb,YAAL,GAAoBa,MAAM,CAACC,OAA3B;AACA,kBAAI,CAACb,WAAL,GAAmB,KAAnB;AACA,kBAAI,CAACE,QAAL,GAAgB,KAAhB;AACD,WALH,EAME,UAAAY,KAAK,EAAI;AACP,gBAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;AACxB,oBAAI,CAACb,QAAL,GAAgB,IAAhB;AACAc,qBAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AACD,kBAAI,CAACjB,WAAL,GAAmB,KAAnB;AACA,kBAAI,CAACD,YAAL,GAAoB,EAApB;AACD,WAbH;AAcD;;;uCAIc;AACb,cAAMT,EAAE,GAAG4B,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,CAAX;AACA,eAAKC,gBAAL,GAAwBhC,EAAxB;AACA,eAAKiC,gBAAL,CAAsBjC,EAAtB;AACD;;;yCAEwBkC,Q,EAAgB;AAAA;;AAEvC,eAAKvB,eAAL,GAAuB,IAAvB;AACA,eAAKL,cAAL,CAAoB6B,SAApB,CAA8BD,QAA9B,EACGpB,SADH,CACa,UAAAQ,MAAM,EAAI;AACnB,gBAAMc,MAAM,GAAGd,MAAM,CAACc,MAAtB;AACA,kBAAI,CAACC,aAAL,GAAqB;AACjBC,uBAAS,EAAEF,MAAM,CAACE,SADD;AAEjBC,uBAAS,EAAEH,MAAM,CAACG,SAFD;AAGjBC,yBAAW,EAAE,MAAI,CAACC,eAAL,CAAqBL,MAAM,CAACI,WAA5B,CAHI;AAIjBE,8BAAgB,EAAE,CAJD;AAKjBC,mBAAK,EAAEP,MAAM,CAACO,KALG;AAMjBC,qBAAO,EAAE,CANQ;AAOjBC,uBAAS,EAAET,MAAM,CAACS,SAPD;AAQjBC,2BAAa,EAAEV,MAAM,CAACU,aARL;AASjBC,oBAAM,EAAE,MAAI,CAACxC,YAAL,CAAkByC,OAAlB,CAA0BZ,MAAM,CAACE,SAAjC;AATS,aAArB;AAWA,kBAAI,CAACD,aAAL,CAAmBK,gBAAnB,GAAsC,MAAI,CAACO,QAAL,CAAc,MAAI,CAACZ,aAAL,CAAmBG,WAAjC,CAAtC;AACA,kBAAI,CAAC7B,eAAL,GAAuB,KAAvB;AACD,WAhBH,EAiBE,UAAAa,KAAK,EAAI;AACPE,mBAAO,CAACC,GAAR,CAAYH,KAAK,CAAC0B,OAAlB;AACA,kBAAI,CAACvC,eAAL,GAAuB,KAAvB;AACD,WApBH;AAwBD;;;wCAEuB6B,W,EAAqB;AAG3C,cAAMW,cAAc,GAAGX,WAAW,CAACY,GAAZ,CAAgB,UAAAC,EAAE,EAAI;AAE3C,gBAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC,OAAxC,EAAgD,WAAhD,EAA6D,UAA7D,EAAyE,MAAzE,EAAiF,QAAjF,CAAlB;AACA,gBAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,OAAlD,CAAnB;AAEA,gBAAIC,UAAU,GAAGH,EAAE,CAACI,WAAH,EAAjB;AACAH,qBAAS,CAACI,OAAV,CAAkB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC3BJ,wBAAU,GAAGA,UAAU,CAACzB,OAAX,CAAmB4B,IAAnB,EAAyBJ,UAAU,CAACK,CAAD,CAAnC,CAAb;AACH,aAFD,EAN2C,CAU3C;;AACAJ,sBAAU,GAAGA,UAAU,CAACzB,OAAX,CAAmB,gBAAnB,EAAqC,GAArC,CAAb,CAX2C,CAa3C;;AACA,gBAAM8B,MAAM,GAAGL,UAAU,CAACM,KAAX,CAAiB,GAAjB,CAAf;AACA,gBAAMC,SAAS,GAAGF,MAAM,CAACG,SAAP,CAAiB,UAAAC,GAAG;AAAA,qBAAIV,UAAU,CAACW,QAAX,CAAoBD,GAApB,CAAJ;AAAA,aAApB,CAAlB;AAEA,gBAAIE,MAAJ;;AACA,gBAAIJ,SAAS,GAAG,CAAC,CAAjB,EAAoB;AAEhB,kBAAMK,UAAU,GAAGP,MAAM,CAACQ,KAAP,CAAa,CAAb,EAAgBN,SAAhB,CAAnB;AACA,kBAAIO,OAAJ;;AAEA,kBAAIC,QAAQ,CAACH,UAAU,CAAC,CAAD,CAAX,CAAR,KAA4B,CAAhC,EAAmC;AAC/BE,uBAAO,GAAGE,IAAI,CAACJ,UAAU,CAAC,CAAD,CAAX,CAAd;AAEH,eAHD,MAGO;AACHE,uBAAO,GAAGE,IAAI,CAACJ,UAAU,CAACK,IAAX,CAAgB,GAAhB,CAAD,CAAd;AACH;;AAAA;AAEDN,oBAAM,GAAG;AACLO,qBAAK,EAAEJ,OADF;AAELX,oBAAI,EAAEE,MAAM,CAACE,SAAD,CAFP;AAGLP,0BAAU,EAAEK,MAAM,CAACQ,KAAP,CAAaN,SAAS,GAAG,CAAzB,EAA4BU,IAA5B,CAAiC,GAAjC;AAHP,eAAT;AAKH,aAjBD,MAiBO,IAAIF,QAAQ,CAACV,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAZ,EAA6B;AAEhCM,oBAAM,GAAG;AACLO,qBAAK,EAAEF,IAAI,CAACX,MAAM,CAAC,CAAD,CAAP,CADN;AAELF,oBAAI,EAAE,EAFD;AAGLH,0BAAU,EAAEK,MAAM,CAACQ,KAAP,CAAa,CAAb,EAAgBI,IAAhB,CAAqB,GAArB;AAHP,eAAT;AAMH,aARM,MAQA,IAAIV,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAEzBI,oBAAM,GAAG;AACLO,qBAAK,EAAE,CADF;AAELf,oBAAI,EAAE,EAFD;AAGLH,0BAAU,EAAVA;AAHK,eAAT;AAKH;;AAGD,mBAAOW,MAAP;AACD,WAtDsB,CAAvB;AAwDA,iBAAOhB,cAAP;AACD;;;iCAEgBX,W,EAA2B;AAC1C,cAAMmC,MAAM,GAAGnC,WAAW,CAACoC,MAA3B;AACA,cAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUJ,MAAM,GAAG,CAAnB,CAAhB;AAEA,iBAAOE,OAAO,GAAG,EAAjB;AACD;;;;;;;uBAtJUxE,Y,EAAY,6I,EAAA,oI,EAAA,2J;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA;AAAA;;;;;;;;kFAHZ,CAAC,4EAAD,EAAiB,mEAAjB,EAA+B,+DAA/B,C;AAA0C,e;AAAA,a;AAAA,6f;AAAA;AAAA;ACXvD;;AACE;;AACE;;AACA;;AAAiB;AAAA,mBAAU,IAAA2E,QAAA,QAAV;AAA0B,WAA1B;;AAA4B;;AAC7C;;AACI;;AACJ;;AACF;;AACA;;AACE;;AAGA;;AAIA;;AAKF;;AACA;;AACE;;AAIA;;AACF;;AACA;;AACE;;AACE;;AACI;;AACA;;AAA4D;;AAAa;;AAAI;;AACjF;;AAEJ;;AACF;;;;AAhCuB;;AAAA;;AAId;;AAAA;;AAID;;AAAA;;AAIA;;AAAA;;AAOA;;AAAA;;AAGgB;;AAAA;;AAGD;;AAAA;;;;;;;;;sEDhBV3E,Y,EAAY;cAPxB,uDAOwB;eAPd;AACT4E,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD,CAHF;AAITC,mBAAS,EAAE,CAAC,4EAAD,EAAiB,mEAAjB,EAA+B,+DAA/B;AAJF,S;AAOc,Q;;;;;;;;;;gBA6CtB,0D;iBAAa,a,EAAe,CAAC,QAAD,C;;gBAC5B,0D;iBAAa,mB,EAAqB,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;AE5DrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBATT,CACT;AACEC,eAAO,EAAE,sEADX;AAEEC,gBAAQ,EAAE,sFAFZ;AAGEC,aAAK,EAAE;AAHT,OADS,C;AAMV,gBAZQ,CACP,uEADO,EAEP,oEAFO,EAGP,2DAHO,EAIP,qEAJO,CAYR;;;;0HAGUH,S,EAAS;AAAA,uBAzBlB,2DAyBkB,EAxBlB,6FAwBkB,EAvBlB,6FAuBkB,EAtBlB,0GAsBkB,EArBlB,qHAqBkB,EApBlB,8EAoBkB,EAnBlB,qGAmBkB,EAlBlB,yEAkBkB,EAjBlB,2GAiBkB;AAjBG,kBAGrB,uEAHqB,EAIrB,oEAJqB,EAKrB,2DALqB,EAMrB,qEANqB;AAiBH,O;AAXF,K;;;;;sEAWPA,S,EAAS;cA3BrB,sDA2BqB;eA3BZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,6FAFY,EAGZ,6FAHY,EAIZ,0GAJY,EAKZ,qHALY,EAMZ,8EANY,EAOZ,qGAPY,EAQZ,yEARY,EASZ,2GATY,CADN;AAYRrF,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,2DAHO,EAIP,qEAJO,CAZD;AAkBRgF,mBAAS,EAAE,CACT;AACEE,mBAAO,EAAE,sEADX;AAEEC,oBAAQ,EAAE,sFAFZ;AAGEC,iBAAK,EAAE;AAHT,WADS,CAlBH;AAyBRE,mBAAS,EAAE,CAAC,2DAAD;AAzBH,S;AA2BY,Q;;;;;;;;;;;;;;;;;;AC/CtB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,e;;;;;;;;;kCACCrG,G,EAAuBsG,I,EAAmB;AAChD,iBAAOA,IAAI,CAACC,MAAL,CAAYvG,GAAZ,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACLL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawG,e;;;AAGX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBANUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,0E;AAAA;AAAA;ACP5B;;AACI;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAAI;;AAAgB;;AACxB;;;;AADQ;;AAAA;;;;;;;;sEDGKA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTb,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;gBAEzB;;;;;;;;;;;;;;;;;;;;AERH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaY,Y;;;AAMT,8BAAc;AAAA;;AAJP,aAAAlF,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAEC,aAAAE,KAAA,GAAwB,EAAxB;AAEQ;;;;mCAEE;AACd,eAAKiF,cAAL;AACA,iBAAO,KAAKjF,KAAL,CAAWsD,KAAX,EAAP;AACH;;;gCAEc4B,I,EAAkB;AAC7B,eAAKlF,KAAL,CAAWmF,IAAX,CAAgBD,IAAhB;AACA,eAAKE,YAAL;AACA,eAAKtF,aAAL,CAAmBuF,IAAnB;AACH;;;mCAEiBpG,E,EAAY;AAC1B,cAAMqG,KAAK,GAAG,KAAKtF,KAAL,CAAWiD,SAAX,CAAqB,UAAAX,EAAE;AAAA,mBAAIA,EAAE,CAACf,SAAH,KAAiBtC,EAArB;AAAA,WAAvB,CAAd;AACA,eAAKe,KAAL,CAAWuF,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACA,eAAKF,YAAL;AACA,eAAKtF,aAAL,CAAmBuF,IAAnB;AACH;;;gCAEcpG,E,EAAY;AACvB,iBAAO,KAAKe,KAAL,CAAWiD,SAAX,CAAqB,UAAAX,EAAE;AAAA,mBAAIA,EAAE,CAACf,SAAH,KAAiBtC,EAArB;AAAA,WAAvB,MAAoD,CAAC,CAA5D;AACH;;;sCAEoB;AACjB,iBAAO,KAAKe,KAAL,CAAW6D,MAAlB;AACH;;;yCAEwB;AACrB,cAAM2B,OAAO,GAAG3E,MAAM,CAAC4E,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAhB;AACA,cAAIF,OAAJ,EAAa,KAAKxF,KAAL,GAAa2F,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAb;AAChB;;;uCAEmB;AAChB3E,gBAAM,CAAC4E,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,EAAqCF,IAAI,CAACG,SAAL,CAAe,KAAK9F,KAApB,CAArC;AACH;;;;;;;;;;;;;;;;;;;;;AC5CL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+F,iB;;;AAIX,mCAAc;AAAA;AAAG;;;;mCAET,CAEP;;;;;;;uBARUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4I;AAAA;AAAA;ACT9B;;AACI;;AAAA;;AACI;;AACJ;;AACJ;;AACA;;AAAA;;AACI;;AACJ;;;;AADqB;;AAAA;;;;;;;;;sEDGRA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7B,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;gBAE3B;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoCY;;AAAA;;AACI;;AACJ;;;;;;AACA;;AAAA;;AACI;;AACJ;;;;;;AAKA;;AACI;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAA2B;;;;AAA0F;;AACrH;;AACI;;AAA2B;;AAAqB;;AAChD;;AACJ;;AACJ;;;;;;AAL+B;;AAAA;;AAEI;;AAAA;;AAC3B;;AAAA;;;;;;;;AArDpB;;AACI;;AACI;;AACA;;AACI;;AAAM;;AAAkB;;AAC5B;;AACJ;;AACA;;AACI;;AACI;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAA2D;;AAA6B;;AACxF;;AAAiC;;AAAO;;AAC5C;;AACA;;AACI;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAA0D;;AAAoB;;AAC9E;;AAAiC;;AAAQ;;AAEzC;;AACI;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AACrB;;AAAA;;AACI;;AACJ;;AACJ;;AACA;;AAAA;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AACrB;;AAAA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAAA;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAGA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAUJ;;AACA;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAAM;;AAAoB;;AAC9B;;AACJ;;AAEA;;AACI;;AAAsB;;AAAc;;AACpC;;AACI;;AACA;;AAAyB;;AAAsB;;AAAO;;AAC1D;;AACA;;AACI;;AAAM;;AAAU;;AAChB;;AAAA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5Ea;;AAAA;;AAEK;;AAAA;;AAQqD;;AAAA;;AAOD;;AAAA;;AAiB/B;;AAAA;;AAGA;;AAAA;;AAOF;;AAAA;;AAuBA;;AAAA;;AAEI;;AAAA;;;;QD5D5B4B,sB;;;AAIX,sCAAoBxG,YAApB,EAAwDC,oBAAxD,EAAoG;AAAA;;AAAhF,aAAAD,YAAA,GAAAA,YAAA;AAAoC,aAAAC,oBAAA,GAAAA,oBAAA;AAEvD;;;;mCAEO,CACP;;;4CAEuB;AACtB,cAAMwG,UAAU,GAAG,KAAK5E,MAAL,CAAYQ,OAAZ,GAAsB,CAAzC;AACA,eAAKqE,cAAL,CAAoBD,UAApB;AACA,eAAK5E,MAAL,CAAYQ,OAAZ,GAAsBoE,UAAtB;AACD;;;4CAEuB;AACtB,cAAI,KAAK5E,MAAL,CAAYQ,OAAZ,GAAsB,CAA1B,EAA6B;AAC3B,gBAAMoE,UAAU,GAAG,KAAK5E,MAAL,CAAYQ,OAAZ,GAAsB,CAAzC;AACA,iBAAKqE,cAAL,CAAoBD,UAApB;AACA,iBAAK5E,MAAL,CAAYQ,OAAZ,GAAsBoE,UAAtB;AACD;AACF;;;iCAEe;AACd,cAAI,KAAK5E,MAAL,CAAYW,MAAhB,EAAwB;AACtB,iBAAKxC,YAAL,CAAkB2G,UAAlB,CAA6B,KAAK9E,MAAL,CAAYE,SAAzC;AACA,iBAAKF,MAAL,CAAYW,MAAZ,GAAqB,KAArB;AACD,WAHD,MAGO;AACL,iBAAKxC,YAAL,CAAkB4G,OAAlB,CAA0B;AACxB7E,uBAAS,EAAE,KAAKF,MAAL,CAAYE,SADC;AAExBK,mBAAK,EAAE,KAAKP,MAAL,CAAYO,KAFK;AAGxBE,uBAAS,EAAE,KAAKT,MAAL,CAAYS,SAHC;AAIxBN,uBAAS,EAAE,KAAKH,MAAL,CAAYG;AAJC,aAA1B;AAMA,iBAAKH,MAAL,CAAYW,MAAZ,GAAqB,IAArB;AACD;AACF;;;4CAE0B;AAAA;;AACzB,cAAMP,WAAW,GAAG,KAAKJ,MAAL,CAAYI,WAAZ,CAAwB6B,KAAxB,EAApB;AAEA7B,qBAAW,CAACkB,OAAZ,CAAoB,UAAAO,GAAG,EAAI;AACzB,gBAAMmD,MAAM,GAAGnD,GAAf;;AACA,kBAAI,CAACzD,oBAAL,CAA0B6G,eAA1B,CAA0CD,MAA1C;AACD,WAHD;AAKD;;;uCAEsBJ,U,EAAoB;AAAA;;AAEzC,eAAK5E,MAAL,CAAYI,WAAZ,CAAwBkB,OAAxB,CAAgC,UAACF,UAAD,EAAgB;AAC9CA,sBAAU,CAACkB,KAAX,IAAqBsC,UAAU,GAAG,MAAI,CAAC5E,MAAL,CAAYQ,OAA9C;AACD,WAFD;AAGD;;;;;;;uBAvDUmE,sB,EAAsB,6H,EAAA,kK;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,+3C;AAAA;AAAA;ACXnC;;;;AAAK;;;;;;;;;;sEDWQA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT9B,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;gBAEhC;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACCI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAA0B;;;;AAA+B;;AACzD;;AAA2B;;AAAsB;;AACrD;;AACJ;;AACJ;;;;;;;;AAT6G;;AAAA;;AAAhF;;AAEZ;;AAAA;;AAGqB;;AAAA;;AACC;;AAAA;;;;QDA9BmC,mB;;;AAKX,qCAAc;AAAA;AACZ;;;;mCAEM,CACP;;;;;;;uBATUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,6N;AAAA;AAAA;ACRhC;;AACI;;AAWJ;;;;AAXQ;;AAAA;;;;;;;;;;sEDOKA,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACTrC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAMqB,Q;;;;gBAE7B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoC,c;;;AAET,8BAAoBC,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAEb,aAAAC,SAAA,GAAY,IAAI,0DAAJ,EAAZ;AAFgC;;;;qCAInBC,S,EAAmB;AACnC,cAAMC,WAAW,GAAG,8CAApB;AAEA,iBAAO,KAAKH,IAAL,CACJI,GADI,CACgBD,WADhB,EAC6B;AAChCE,kBAAM,EAAE,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,GAArB,EAA0BJ,SAA1B;AADwB,WAD7B,CAAP;AAIH;;;kCAEgBxF,Q,EAAkB;AACjC,cAAMyF,WAAW,GAAG,2CAApB;AAEA,iBAAO,KAAKH,IAAL,CACJI,GADI,CACgBD,WADhB,EAC6B;AAChCE,kBAAM,EAAE,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,KAArB,EAA4B5F,QAA5B;AADwB,WAD7B,CAAP;AAKD;;;;;;;uBAvBQqF,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaQ,c;;;;;;;;;kCACCpF,K,EAA+B;AAAA,cAAnBqF,KAAmB,uEAAJ,EAAI;AACrC,cAAMC,QAAQ,GAAG,EAAjB;;AAEA,cAAItF,KAAK,CAACiC,MAAN,GAAeoD,KAAnB,EAA0B;AACtBrF,iBAAK,CAACmB,KAAN,CAAY,GAAZ,EAAiBoE,MAAjB,CAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,kBAAID,GAAG,GAAGC,GAAG,CAACxD,MAAV,IAAoBoD,KAAxB,EAA+B;AAC3BC,wBAAQ,CAAC/B,IAAT,CAAckC,GAAd;AACH;;AACD,qBAAOD,GAAG,GAAGC,GAAG,CAACxD,MAAjB;AACH,aALD,EAKG,CALH;AAMA,6BAAUqD,QAAQ,CAACxD,IAAT,CAAc,GAAd,CAAV;AACH,WARD,MAQO;AACH,mBAAO9B,KAAP;AACH;AACJ;;;;;;;uBAfQoF,c;AAAc,K;;;;YAAdA,c;AAAc;;;;;sEAAdA,c,EAAc;cAH1B,kDAG0B;eAHrB;AACFM,cAAI,EAAE;AADJ,S;AAGqB,Q;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,mB;;;AAKX,mCAAoBhI,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAFV,aAAAiI,MAAA,GAAS,IAAI,0DAAJ,EAAT;AAE6C;;;;mCAE/C,CACP;;;mCAEO;AACN,eAAKA,MAAL,CAAYnC,IAAZ,CAAiB,KAAKhF,SAAtB;AACD;;;;;;;uBAZUkH,mB,EAAmB,sI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,iS;AAAA;AAAA;ACPhC;;AACI;;AAAyC;AAAA;AAAA;;AAAzC;;AACA;;AAAgC;AAAA,mBAAS,IAAAtD,QAAA,EAAT;AAAmB,WAAnB;;AAC5B;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAAM;;AAAM;;AAChB;;AACJ;;;;AAP6C;;AAAA;;;;;;;;;sEDMhCsD,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;gBAG7B;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAUaqD,qB;;;AAWX,qCAAoBlI,cAApB,EAA4DC,YAA5D,EAAwF;AAAA;;AAApE,aAAAD,cAAA,GAAAA,cAAA;AAAwC,aAAAC,YAAA,GAAAA,YAAA;AAVnD,aAAAgB,OAAA,GAA0B,EAA1B;AACA,aAAAS,gBAAA,GAA2B,EAA3B;AAEF,aAAAyG,WAAA,GAAsB,CAAtB;AAGA,aAAAC,SAAA,GAAqB,KAArB;AAEC,aAAAC,aAAA,GAAwB,EAAxB;AAEkF;;;;mCAElF,CACP;;;iCAIeC,S,EAAmB;AACjC,cAAIA,SAAS,KAAK,MAAlB,EAAyB;AACvB,gBAAG,KAAKH,WAAL,GAAmB,CAAtB,EAAyB;AACvB,mBAAKA,WAAL;AACD;AACF,WAJD,MAIM,IAAGG,SAAS,KAAK,MAAjB,EAAyB;AAC7B,gBAAG,KAAKH,WAAL,GAAmB,KAAKI,OAA3B,EAAoC;AAClC,mBAAKJ,WAAL;AACD;AACF;;AACD,eAAKK,mBAAL;AACD;;;8CAE4B;AAC3B,cAAMC,KAAK,GAAG,CAAC,KAAKN,WAAL,GAAmB,CAApB,IAAyB,KAAKE,aAA5C;AACA,cAAMK,GAAG,GAAG,KAAKP,WAAL,GAAmB,KAAKE,aAApC;AAEA,eAAKE,OAAL,GAAgB,KAAKtH,OAAL,CAAaqD,MAAb,GAAoB,KAAK+D,aAAzC;AACA,iBAAO,KAAKpH,OAAL,CAAa8C,KAAb,CAAmB0E,KAAnB,EAA0BC,GAA1B,CAAP;AACD;;;;;;;uBArCUR,qB,EAAqB,sI,EAAA,6H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,+U;AAAA;AAAA;ACVlC;;AACI;;AAIA;;AACI;;AAEI;AAAA,mBAAS,IAAAS,QAAA,CAAS,MAAT,CAAT;AAAyB,WAAzB;;AAEA;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAAM;;AAA0B;;AACpC;;AACA;;AAEI;AAAA,mBAAS,IAAAA,QAAA,CAAS,MAAT,CAAT;AAAyB,WAAzB;;AAEA;;AAAA;;AACI;;AACJ;;AACA;;AAAA;;AAAM;;AAA0B;;AACpC;;AACJ;;AACJ;;;;AAvBQ;;AAAA,yGAAiC,kBAAjC,EAAiC,oBAAjC;;AAOI;;AAAA;;AAIM;;AAAA;;AAKN;;AAAA;;AAIM;;AAAA;;;;;;;;;sEDZLT,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTvD,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;gBAC/B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa+D,oB;;;AAHb;AAAA;;AAKY,aAAAC,IAAA,GAAmB,EAAnB;AAED,aAAAlI,qBAAA,GAAwB,IAAI,0DAAJ,EAAxB;AAgCV;;;;kCA7BiB;AACV,iBAAO,KAAKkI,IAAL,CAAU9E,KAAV,EAAP;AACH;;;wCAEsBb,U,EAAwB;AAE3C,eAAK2F,IAAL,CAAUjD,IAAV,CAAe;AACXlG,cAAE,EAAE,KAAKmJ,IAAL,CAAUvE,MAAV,GAAmB,CADZ;AAEXwE,sBAAU,EAAE;AACR1E,mBAAK,EAAElB,UAAU,CAACkB,KADV;AAERf,kBAAI,EAAEH,UAAU,CAACG,IAFT;AAGRH,wBAAU,EAAEA,UAAU,CAACA;AAHf;AAFD,WAAf;AASA,eAAKvC,qBAAL,CAA2BmF,IAA3B;AACH;;;2CAEyBpG,E,EAAY;AAClC,cAAMqJ,OAAO,GAAG,KAAKF,IAAL,CAAUnF,SAAV,CAAoB,UAAAX,EAAE;AAAA,mBAAIA,EAAE,CAACrD,EAAH,KAAUA,EAAd;AAAA,WAAtB,CAAhB;AACA,eAAKmJ,IAAL,CAAU7C,MAAV,CAAiB+C,OAAjB,EAA0B,CAA1B;AAEH;;;gDAE8BrJ,E,EAAYsJ,Q,EAAU;AACjD,eAAKH,IAAL,CAAUI,IAAV,CAAe,UAAAlG,EAAE;AAAA,mBAAIA,EAAE,CAACrD,EAAH,KAAUA,EAAd;AAAA,WAAjB,EAAmCoJ,UAAnC,CAA8C1E,KAA9C,GAAsD4E,QAAtD;AACH;;;;;;;uBAjCQJ,oB;AAAoB,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFjB;;;;;sEAEHA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACRM,oBAAU,EAAE;AADJ,S;AAGqB,Q;;;;;;;;;;;;;;;;;;ACXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEI;;AACI;;AACI;;AAAqB;AAAA;;AAAA;AAAA;AAAA;;AAArB;;AACA;;AAAI;;AAAmC;;AAC3C;;AACA;;AAAiC;;AAAwC;;AACzE;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AATyE;;AAAA;;AAA5C;;AACjB;;AAAA;;AAEyB;;AAAA;;;;QDC5BC,qB;;;AAIX,qCAAoBjJ,oBAApB,EAAgE;AAAA;;AAA5C,aAAAA,oBAAA,GAAAA,oBAAA;AAFX,aAAAU,YAAA,GAA2B,EAA3B;AAE0D;;;;mCAE3D,CACP;;;qCAEYlB,E,EAAY;AACvB,cAAMqJ,OAAO,GAAG,KAAKnI,YAAL,CAAkB8C,SAAlB,CAA4B,UAAAX,EAAE;AAAA,mBAAIA,EAAE,CAACrD,EAAH,KAAUA,EAAd;AAAA,WAA9B,CAAhB;AACA,eAAKkB,YAAL,CAAkBoF,MAAlB,CAAyB+C,OAAzB,EAAkC,CAAlC;AACA,eAAK7I,oBAAL,CAA0BkJ,kBAA1B,CAA6C1J,EAA7C;AACD;;;0CAEiBA,E,EAAWsJ,Q,EAAkB;AAC7C,eAAK9I,oBAAL,CAA0BmJ,uBAA1B,CAAkD3J,EAAlD,EAAsDsJ,QAAtD;AACD;;;;;;;uBAjBUG,qB,EAAqB,6I;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,gW;AAAA;AAAA;ACRlC;;AAAsB;;AAAgB;;AACtC;;AACI;;AAYJ;;;;AAZ+B;;AAAA;;;;;;;;;sEDMlBA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTxE,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;gBAE/B;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIrI,OAAO,CAACF,KAAR,CAAcuI,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewEncapsulation, HostListener, OnInit } from '@angular/core';\nimport { RecipeServices } from './recipe/recipesearch.services';\nimport { LikeServices } from './recipe/likes.services';\nimport { HttpClient } from '@angular/common/http';\nimport { RecipeSearch, Recipe, Ingredient } from './recipe/recipe.model';\nimport { ShoppingListServices, Shopping } from './shopping-list/shopping-list.services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [RecipeServices, LikeServices, HttpClient]\n  \n})\nexport class AppComponent implements OnInit {\n  \n  public searchResult: RecipeSearch[] = [];\n  public isSearching: boolean = false;\n  public isRecipeLoading: boolean = false;\n  public selectedRecipeId: string;\n  public recipeDetails: Recipe;\n  public noRecipe: boolean = false;\n  public likes: RecipeSearch[];\n  public shoppingList: Shopping[];\n \n  constructor(private recipeServices: RecipeServices, private likeServices: LikeServices, private shoppingListServices: ShoppingListServices) {\n    this.likeServices.OnLikeUpdated.subscribe(() => {\n      this.likes = this.likeServices.getLikes();\n    });\n\n    this.shoppingListServices.onShoppingItemUpdated.subscribe(() => {\n      this.shoppingList = this.shoppingListServices.getList();\n    })\n    \n  };\n\n  ngOnInit() {\n    this.likes = this.likeServices.getLikes();\n    this.shoppingList = this.shoppingListServices.getList();\n  }\n\n  public onSearch(searchKey: string): void {\n\n    this.isSearching = true;\n    this.recipeServices.searchRecipe(searchKey)\n      .subscribe(result => {\n        this.searchResult = result.recipes;\n        this.isSearching = false;\n        this.noRecipe = false;\n      },\n      error => {\n        if (error.status === 400) {\n          this.noRecipe = true;\n          console.log('error is true');\n        }\n        this.isSearching = false;\n        this.searchResult = [];\n      });\n  }\n  @HostListener('window:load', ['$event']) \n  @HostListener('window:hashchange', ['$event'])\n\n  onHashChange() {\n    const id = window.location.hash.replace('#', '');\n    this.selectedRecipeId = id;\n    this.getRecipeDetails(id);\n  }\n\n  private getRecipeDetails(recipeId: string): void{\n\n    this.isRecipeLoading = true;\n    this.recipeServices.getRecipe(recipeId)\n      .subscribe(result => {\n        const recipe = result.recipe;\n        this.recipeDetails = {\n            recipe_id: recipe.recipe_id,\n            image_url: recipe.image_url,\n            ingredients: this.parseIngredient(recipe.ingredients),\n            preparetion_time: 1,\n            title: recipe.title,\n            serving: 4,\n            publisher: recipe.publisher,\n            publisher_url: recipe.publisher_url,\n            isLike: this.likeServices.isLiked(recipe.recipe_id)\n        }\n        this.recipeDetails.preparetion_time = this.calcTime(this.recipeDetails.ingredients);\n        this.isRecipeLoading = false;\n      },\n      error => {\n        console.log(error.message);\n        this.isRecipeLoading = false;\n      })\n\n\n\n  }\n\n  private parseIngredient(ingredients: string[]): Ingredient[] {\n    \n    \n    const newIngredients = ingredients.map(el => {\n \n      const unitsLong = ['tablespoons', 'tablesppon', 'ounces', 'ounce','teaspoons', 'teaspoon', 'cups', 'pounds'];\n      const unitsShort = ['tbsp', 'tbsp', 'oz', 'oz', 'tsp', 'tsp', 'cup', 'pound'];\n\n      let ingredient = el.toLowerCase();\n      unitsLong.forEach((unit, i) => {\n          ingredient = ingredient.replace(unit, unitsShort[i]);\n      });\n\n      // Remove parenthesis\n      ingredient = ingredient.replace(/ *\\([^)]*\\) */g, \" \");\n\n      // Parse ingredients into unit and ingredient\n      const arrIng = ingredient.split(' ');\n      const unitIndex = arrIng.findIndex(ing => unitsShort.includes(ing));\n\n      let objIng: Ingredient;\n      if (unitIndex > -1) {\n\n          const arrUnitNum = arrIng.slice(0, unitIndex);\n          let unitNum;\n\n          if (parseInt(arrUnitNum[0]) === 1) {\n              unitNum = eval(arrUnitNum[0]);\n\n          } else {\n              unitNum = eval(arrUnitNum.join('+')); \n          };\n\n          objIng = {\n              count: unitNum,\n              unit: arrIng[unitIndex],\n              ingredient: arrIng.slice(unitIndex + 1).join(' ')\n          };\n      } else if (parseInt(arrIng[0], 10)) {\n\n          objIng = {\n              count: eval(arrIng[0]), \n              unit: '', \n              ingredient: arrIng.slice(1).join(' '),\n          };\n\n      } else if (unitIndex === -1) {\n\n          objIng = {\n              count: 1, \n              unit: '', \n              ingredient\n          };\n      }\n\n\n      return objIng;\n    });\n\n    return newIngredients;\n  }\n\n  private calcTime(ingredients: Ingredient[]) :number{\n    const numIng = ingredients.length;\n    const periods = Math.ceil(numIng / 3);\n\n    return periods * 15;\n  }\n\n\n  \n\n \n\n}\n","<div class=\"container\" >\n  <header class=\"header\">\n    <img src=\"../assets/img/logo.png\" alt=\"Logo\" class=\"header__logo\">\n    <app-search-form (search)=\"onSearch($event)\"></app-search-form>\n    <div class=\"likes\">\n        <app-like-list [likes]=\"likes\"></app-like-list>  \n    </div>\n  </header>\n  <div class=\"results\">\n    <div *ngIf=\"noRecipe && !isSearching\">\n        <h3 class=\"heading-2\">Searched recipe is not yet available.</h3>\n    </div> \n    <app-loader \n        *ngIf=\"isSearching\" \n        [message]=\"'Searching recipe'\">\n    </app-loader>\n    <app-search-result\n        *ngIf=\"!isSearching && searchResult.length > 0\"\n        [recipes]=\"searchResult\"\n        [selectedRecipeId]=\"selectedRecipeId\">\n    </app-search-result>\n  </div>\n  <div class=\"recipe\">\n    <app-loader \n        *ngIf=\"isRecipeLoading\" \n        [message]=\"'Loading Recipe'\">\n    </app-loader>   \n    <app-recipe-details *ngIf=\"!isRecipeLoading\" [recipe]=\"recipeDetails\"></app-recipe-details>\n  </div>\n  <div class=\"shopping\">\n    <app-shopping-list [shoppingList] =\"shoppingList\"></app-shopping-list>   \n      <div class=\"copyright\">\n          &copy; by Jonas Schmedtmann. Powered by\n          <a href=\"http://food2fork.com\" target=\"_blank\" class=\"link\">Food2Fork.com</a>.\n      </div>\n\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecipeListComponent } from './recipe/recipe-list/recipe-list.component';\nimport { LikeListComponent } from './recipe/likes/like-list/like-list.component';\nimport { SearchResultComponent } from './recipe/search/search-result/search-result.component';\nimport { RecipeDetailsComponent } from './recipe/recipe-details/recipe-details/recipe-details.component';\nimport { LimitTitlePipe } from './recipe/search/limit-title.pipe';\nimport { SearchFormComponent } from './recipe/search/search-form/search-form.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { AuthInterceptor } from './interceptor/auth-interceptor.service';\nimport { LoaderComponent } from './loader/loader.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list/shopping-list.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipeListComponent,\n    LikeListComponent,\n    SearchResultComponent,\n    RecipeDetailsComponent,\n    LimitTitlePipe,\n    SearchFormComponent,\n    LoaderComponent,\n    ShoppingListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        return next.handle(req);\r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  @Input() message: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader\">\n    <svg>\n        <use href=\"../assets/img/icons.svg#icon-cw\"></use>\n    </svg>\n    <h2>{{ message }}...</h2>\n</div>","import { RecipeSearch } from './recipe.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n\r\nexport class LikeServices {\r\n\r\n    public OnLikeUpdated = new EventEmitter();\r\n\r\n    private likes: RecipeSearch[] = [];\r\n\r\n    constructor() {}\r\n\r\n    public getLikes() {\r\n        this.getFromStorage();\r\n        return this.likes.slice();\r\n    }\r\n\r\n    public addLike(like: RecipeSearch): void {\r\n        this.likes.push(like);\r\n        this.setToStorage();\r\n        this.OnLikeUpdated.emit();\r\n    }\r\n\r\n    public deleteLike(id: string) {\r\n        const index = this.likes.findIndex(el => el.recipe_id === id);\r\n        this.likes.splice(index, 1);\r\n        this.setToStorage();\r\n        this.OnLikeUpdated.emit();\r\n    }\r\n\r\n    public isLiked(id: string) {\r\n        return this.likes.findIndex(el => el.recipe_id === id) !== -1;\r\n    }\r\n\r\n    public getNumLikes() {\r\n        return this.likes.length;\r\n    }\r\n\r\n    private getFromStorage() {\r\n        const storage = window.localStorage.getItem('likes');\r\n        if (storage) this.likes = JSON.parse(storage);\r\n    }\r\n\r\n    private setToStorage(): void {\r\n        window.localStorage.setItem('likes', JSON.stringify(this.likes));\r\n    }\r\n\r\n\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { LikeServices } from '../../likes.services';\nimport { RecipeSearch } from '../../recipe.model'\n\n@Component({\n  selector: 'app-like-list',\n  templateUrl: './like-list.component.html',\n  styleUrls: ['./like-list.component.css']\n})\nexport class LikeListComponent implements OnInit {\n\n  @Input() likes: RecipeSearch[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n\n\n}\n","<div class=\"likes__field\">\n    <svg class=\"likes__icon\">\n        <use href=\"../assets/img/icons.svg#icon-heart\"></use>\n    </svg>\n</div>\n<div class=\"likes__panel\">\n    <app-recipe-list [recipes]=\"likes\"></app-recipe-list>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipeServices } from '../../recipesearch.services';\nimport { Recipe } from '../../recipe.model';\nimport { LikeServices } from '../../likes.services';\nimport { ShoppingListServices } from 'src/app/shopping-list/shopping-list.services';\n\n@Component({\n  selector: 'app-recipe-details',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.css']\n})\nexport class RecipeDetailsComponent implements OnInit {\n\n  @Input() recipe: Recipe;\n\n  constructor(private likeServices: LikeServices, private shoppingListServices: ShoppingListServices) { \n  \n  }\n\n  ngOnInit(): void {\n  }\n\n  public onIncreaseServing(): void {\n    const newServing = this.recipe.serving + 1;\n    this.updateServings(newServing);\n    this.recipe.serving = newServing;\n  }\n\n  public onDecreaseServing(): void {\n    if (this.recipe.serving > 1) {\n      const newServing = this.recipe.serving - 1;\n      this.updateServings(newServing);\n      this.recipe.serving = newServing;\n    }\n  }\n\n  public onLike() {\n    if (this.recipe.isLike) {\n      this.likeServices.deleteLike(this.recipe.recipe_id);\n      this.recipe.isLike = false;\n    } else {\n      this.likeServices.addLike({\n        recipe_id: this.recipe.recipe_id,\n        title: this.recipe.title,\n        publisher: this.recipe.publisher,\n        image_url: this.recipe.image_url,\n      });\n      this.recipe.isLike = true;\n    }\n  }\n  \n  public onShoppingListAdd() {\n    const ingredients = this.recipe.ingredients.slice();\n\n    ingredients.forEach(ing => {\n      const newIng = ing;\n      this.shoppingListServices.addShoppingItem(newIng);\n    })\n    \n  }\n\n  private updateServings(newServing: number) {\n\n    this.recipe.ingredients.forEach((ingredient) => {\n      ingredient.count *= (newServing / this.recipe.serving);\n    })\n  }\n\n\n\n\n\n}\n","<div *ngIf=\"recipe\">\n    <figure class=\"recipe__fig\">\n        <img src=\"{{ recipe.image_url }}\" alt=\"Tomato\" class=\"recipe__img\">\n        <h1 class=\"recipe__title\">\n            <span>{{ recipe.title }}</span>\n        </h1>\n    </figure>\n    <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n                <use href=\"../assets/img/icons.svg#icon-stopwatch\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">{{ recipe.preparetion_time }}</span>\n            <span class=\"recipe__info-text\"> minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n                <use href=\"../assets/img/icons.svg#icon-man\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">{{ recipe.serving }}</span>\n            <span class=\"recipe__info-text\"> servings</span>\n\n            <div class=\"recipe__info-buttons\">\n                <button class=\"btn-tiny\" (click)=\"onDecreaseServing()\">\n                    <svg>\n                        <use href=\"../assets/img/icons.svg#icon-circle-with-minus\"></use>\n                    </svg>\n                </button>\n                <button class=\"btn-tiny\" (click)=\"onIncreaseServing()\">\n                    <svg>\n                        <use href=\"../assets/img/icons.svg#icon-circle-with-plus\"></use>\n                    </svg>\n                </button>\n            </div>\n        </div>\n        <button class=\"recipe__love\" (click)=\"onLike()\">\n            <svg class=\"header__likes\" *ngIf=\"!recipe.isLike\">\n                <use href=\"../assets/img/icons.svg#icon-heart-outlined\"></use>\n            </svg>\n            <svg class=\"header__likes\" *ngIf=\"recipe.isLike\">\n                <use href=\"../assets/img/icons.svg#icon-heart\"></use>\n            </svg>\n        </button>\n    </div>\n    <div class=\"recipe__ingredients\">\n        <ul class=\"recipe__ingredient-list\" >\n            <li class=\"recipe__item\" *ngFor=\"let ingredient of recipe.ingredients\">\n                <svg class=\"recipe__icon\">\n                    <use href=\"../assets/img/icons.svg#icon-check\"></use>\n                </svg>\n                <div class=\"recipe__count\">{{ ingredient.count % 1 !== 0 ? (ingredient.count | number: '1.2-2') : ingredient.count }}</div>\n                <div class=\"recipe__ingredient\">\n                    <span class=\"recipe__unit\">{{ ingredient.unit }}</span>\n                    {{ ingredient.ingredient }}\n                </div>\n            </li>\n        </ul>\n        <button class=\"btn-small recipe__btn\" (click)=\"onShoppingListAdd()\">\n            <svg class=\"search__icon\">\n                <use href=\"../assets/img/icons.svg#icon-shopping-cart\"></use>\n            </svg>\n            <span>Add to shopping list</span>\n        </button>\n    </div>\n\n    <div class=\"recipe__directions\">\n        <h2 class=\"heading-2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__by\">{{ recipe.publisher }}</span>. Please check out directions at their website.\n        </p>\n        <a class=\"btn-small recipe__btn\" href=\"{{ recipe.publisher_url }}\" target=\"_blank\">\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n                <use href=\"../assets/img/icons.svg#icon-triangle-right\"></use>\n            </svg>\n        </a>\n    </div>  \n</div>\n     ","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n  \n})\nexport class RecipeListComponent implements OnInit {\n\n  @Input() public recipes;\n  @Input() public selectedRecipeId: string;\n\n  constructor() {\n   }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<ul class=\"results__list\">\r\n    <li *ngFor ='let recipe of recipes'>\r\n        <a class=\"results__link\" [ngClass]=\"{'results__link--active' : selectedRecipeId === recipe.recipe_id}\"   href=\"#{{ recipe.recipe_id }}\">\r\n            <figure class=\"results__fig\">\r\n                <img src=\"{{ recipe.image_url }}\" alt=\"Test\">\r\n            </figure>\r\n            <div class=\"results__data\">\r\n                <h4 class=\"results__name\">{{ recipe.title | limittitle }}</h4>\r\n                <p class=\"results__author\">{{ recipe.publisher }}</p>\r\n            </div>\r\n        </a>\r\n    </li>\r\n</ul>\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { SearchResponse } from './search/searchresponse.model';\r\nimport {  HttpClient,  HttpParams } from '@angular/common/http';\r\nimport { RecipeSearch, RecipeResponse } from './recipe.model';\r\n\r\n\r\n@Injectable()\r\nexport class RecipeServices {\r\n\r\n    constructor(private http: HttpClient){} \r\n\r\n    public newRecipe = new EventEmitter();\r\n\r\n    public searchRecipe(recipeKey: string) {\r\n        const apiendpoint = 'https://forkify-api.herokuapp.com/api/search';\r\n\r\n        return this.http\r\n          .get<SearchResponse>(apiendpoint, {\r\n            params: new HttpParams().set('q', recipeKey)\r\n          });\r\n    }\r\n\r\n    public getRecipe(recipeId: string) {\r\n      const apiendpoint = 'https://forkify-api.herokuapp.com/api/get';\r\n\r\n      return this.http\r\n        .get<RecipeResponse>(apiendpoint, {\r\n          params: new HttpParams().set('rId', recipeId)\r\n        });\r\n      \r\n    }\r\n\r\n}","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'limittitle'\r\n})\r\nexport class LimitTitlePipe implements PipeTransform {\r\n    transform(title: any, limit:number = 17) {\r\n        const newTitle = [];\r\n\r\n        if (title.length > limit) { \r\n            title.split(' ').reduce((acc, cur) => {\r\n                if (acc + cur.length <= limit) {\r\n                    newTitle.push(cur);\r\n                }\r\n                return acc + cur.length;\r\n            }, 0);\r\n            return `${newTitle.join(' ')}...`;\r\n        } else {\r\n            return title;\r\n        }\r\n    }\r\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RecipeServices } from '../../recipesearch.services';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent implements OnInit {\n\n  public searchKey: string;\n  @Output() search = new EventEmitter<string>();\n\n  constructor(private recipeServices: RecipeServices) { }\n\n  ngOnInit(): void {\n  }\n\n  onSearch(): void {\n    this.search.emit(this.searchKey);\n  }\n\n\n}\n","\n<form class=\"search\">\n    <input type=\"text\" class=\"search__field\" [(ngModel)]=\"searchKey\" name=\"searchKey\" placeholder=\"Search over 1,000,000 recipes...\">\n    <button class=\"btn search__btn\" (click)=\"onSearch()\">\n        <svg class=\"search__icon\">\n            <use href=\"../assets/img/icons.svg#icon-magnifying-glass\"></use>\n        </svg>\n        <span>Search</span>\n    </button>\n</form>\n","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { RecipeSearch, Recipe, Ingredient } from '../../recipe.model';\nimport { RecipeServices } from '../../recipesearch.services';\nimport { LikeServices } from '../../likes.services';\n\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.css']\n})\nexport class SearchResultComponent implements OnInit {\n  @Input() recipes: RecipeSearch[] = []; \n  @Input() selectedRecipeId: string = '';\n\n  public currentPage: number = 1;\n  public maxPage: number;\n  public recipeDetails: Recipe;\n  public isLoading: boolean = false;\n\n  private resultperPage: number = 10;\n\n  constructor(private recipeServices: RecipeServices, private likeServices: LikeServices) {}\n\n  ngOnInit(): void {\n  }\n\n \n\n  public gotoPage(direction: string) {\n    if (direction === 'prev'){\n      if(this.currentPage > 1) {       \n        this.currentPage--;\n      }\n    }else if(direction === 'next') {\n      if(this.currentPage < this.maxPage) {       \n        this.currentPage++;\n      }\n    }\n    this.renderResultPerPage();\n  }\n\n  public renderResultPerPage() {\n    const start = (this.currentPage - 1) * this.resultperPage;\n    const end = this.currentPage * this.resultperPage;\n\n    this.maxPage =  this.recipes.length/this.resultperPage;\n    return this.recipes.slice(start, end);\n  }\n\n  \n\n}\n","<div>\n    <app-recipe-list \n        [recipes]=\"renderResultPerPage()\" \n        [selectedRecipeId]=\"selectedRecipeId\">\n    </app-recipe-list>\n    <div class=\"results__pages\">\n        <button \n            class=\"btn-inline results__btn--prev\" \n            (click)=\"gotoPage('prev')\"\n            [ngStyle] =\"{'display': currentPage > 1? 'block':'none'}\">\n            <svg class=\"search__icon\">\n                <use href=\"../assets/img/icons.svg#icon-triangle-left\"></use>\n            </svg>\n            <span>Page {{ currentPage - 1 }}</span>\n        </button>\n        <button \n            class=\"btn-inline results__btn--next\" \n            (click)=\"gotoPage('next')\"\n            [ngStyle] =\"{'display': currentPage < maxPage? 'block':'none'}\">\n            <svg class=\"search__icon\">\n                <use href=\"../assets/img/icons.svg#icon-triangle-right\"></use>\n            </svg>\n            <span>Page {{ currentPage + 1 }}</span>\n        </button>\n    </div>\n</div>\n\n","import { Ingredient } from '../recipe/recipe.model';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\n\r\nexport interface Shopping {\r\n    id: number,\r\n    Ingredient: Ingredient;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ShoppingListServices {\r\n\r\n    private list: Shopping[] = [];\r\n\r\n    public onShoppingItemUpdated = new EventEmitter();\r\n    \r\n\r\n    public getList(): Shopping[] {\r\n        return this.list.slice();\r\n    }\r\n\r\n    public addShoppingItem(ingredient: Ingredient) {\r\n\r\n        this.list.push({\r\n            id: this.list.length + 1,\r\n            Ingredient: {\r\n                count: ingredient.count,\r\n                unit: ingredient.unit,\r\n                ingredient: ingredient.ingredient\r\n            }\r\n        });\r\n\r\n        this.onShoppingItemUpdated.emit();\r\n    }\r\n\r\n    public removeShoppingItem(id: number) {\r\n        const itemInd = this.list.findIndex(el => el.id === id);\r\n        this.list.splice(itemInd, 1);\r\n        \r\n    }\r\n\r\n    public updateShoppingItemCount(id: number, newCount) {\r\n        this.list.find(el => el.id === id).Ingredient.count = newCount;\r\n    }\r\n\r\n\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Shopping, ShoppingListServices } from '../shopping-list.services';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit {\n\n  @Input() shoppingList: Shopping[] = [];\n\n  constructor(private shoppingListServices: ShoppingListServices) { }\n\n  ngOnInit(): void {\n  }\n\n  onRemoveItem(id: number) {\n    const itemInd = this.shoppingList.findIndex(el => el.id === id);\n    this.shoppingList.splice(itemInd, 1);\n    this.shoppingListServices.removeShoppingItem(id);\n  }\n\n  onItemCountChange(id:number, newCount: number) {\n    this.shoppingListServices.updateShoppingItemCount(id, newCount);\n  }\n  \n\n}\n","<h2 class=\"heading-2\">My Shopping List</h2>\n<ul class=\"shopping__list\">\n    <li class=\"shopping__item\" *ngFor=\"let shoppingItem of shoppingList\">\n        <div class=\"shopping__count\">\n            <input type=\"number\" [(ngModel)]=\"shoppingItem.Ingredient.count\" step=\"{{ shoppingItem.Ingredient.count }}\">\n            <p> {{ shoppingItem.Ingredient.unit }} </p>\n        </div>\n        <p class=\"shopping__description\">{{ shoppingItem.Ingredient.ingredient }}</p>\n        <button class=\"shopping__delete btn-tiny\" (click)=\"onRemoveItem(shoppingItem.id)\">\n            <svg>\n                <use href=\"../assets/img/icons.svg#icon-circle-with-cross\"></use>\n            </svg>\n        </button>\n    </li>\n</ul>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}